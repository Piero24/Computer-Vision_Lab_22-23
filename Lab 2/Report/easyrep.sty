%
% easyrep.sty - easy report style
%
% -----------------------------------------------------
% - package options
%     en - support en language (default is italian) 
%          \usepackage[en]{easyrep}, will support english language
%          \usepackage{easyrep}, will support italian language
%     
% - includes many useful packages  :
%     pdf handling, math, graphics and table formatting support
% - defines styles for sectioning in a compact format
% - add some macros for: 
%     easy printing of a cover page
%     text style formatting
%     automatic conversion of figure formats
%     some typo accelerators
%
% summary of provided macros
% \Title{text}     defines the document title 
% \Subtitle{text}  defines the subtitle
% \Author{text}    defines the author string
% \Date{text}      defines a date string
% \printCover      print a cover page using above information
%
% --- text styles
% \tDef{text}      definition (generic) 
% \tDefObj{text}   definition (the ter being defined)
% \tDefTxt{text}   definition (the statement defining the term) 
% \tRemark{text}   remarked text
% \tREMARK{text}   highly remarked text 
% \tLoud{text}     shouted text! 
% \tCode{text}     inline code text
% \tLatin{text}    latin text
% \tForeign{text}  foreign language text 
% \tExample{text}  example 
% \tStandard{text} a recommendation 
% \tQuote{text}    a quoted text 
% \tQuoteFig{text} a quoted text referring to a figure 
% \tConcept{text}  an important concept  
% \tBeginPar{text} highlighted text 
%                  at the beginning of a paragraph 
%
% ---environments
% \begin{quoteStandard} text... \end{quoteStandard}
%    print text to be quoted, e.g. sentences from 
%    a recommendation
%
% \begin{quoteRemark} text... \end{quoteRemark}
%    similar to quoteStandard, but the text is more marked
%
%  
% --- typo accelerators
% \qmo             opening quotation mark (use \qmo{})
% \qmc             closing quotation mark (use \qmc{})
% \th  emphasises "th"
% \ie  slanted "i.e."
% \eg  slanted "e.g."
% \es  slanteg "ad es."
% \octave   "octave" in \tCode style
% \matlab   "matlab"
% \labview  "labVIEW"
% \latex    "LaTeX" (just the text!)
%
% --- math typo accelerators
% \v{math text}  underlines the math text (useful for vector) 
%
% --- debug commands
% \debugTextStyles        print a table showing text styles
% \debugPrintCharacters   print a table of characters
% \Vispa                  print some text (to fill)  
% \Vispas                 more filling text
%
% ----------------------------------------------------------



% !TEX encoding = UTF-8

\ProvidesPackage{easyrep}[2022/03/07  v1.8, M.Bertocco, An agile style for reports]
%\ProvidesPackage{easyrep}[2018/30/01 v1.5, M.Bertocco, An agile style for reports]

% summary of changes (reverse order)
% 2022-03-08
%   - bug fixed
%     en package option 
% 2020-08-03
%   - bug fixed in vertival alignment of \printCover
%     (using \vfill instead of \vspace{length})
%
% 2020-07-13
%   - \tLoud{text} macro, 
%   - fixed typos in debugTextStyles
%
% 2018-01-30
%   - handled style option en|it
%   - usage of '@' for internal variable (@Title, ...)


% ===================================================================
% package options
% ===================================================================

% https://tex.stackexchange.com/questions/152511/passing-an-if-else-option-to-a-custom-sty-file
%\DeclareOption{option}{code}


\newif\if@enlang\@enlangfalse
\DeclareOption{en}{\@enlangtrue}

\DeclareOption*{\OptionNotUsed}
% the following must be the last code line of this section!
\ProcessOptions\relax

% ===================================================================
% fundamental packages
% ===================================================================


% --- include packages --------------------------------------------------------

% --- conditional compilation
\usepackage{ifthen,calc}    % conditional compilation  
\usepackage{ifpdf,ifxetex}  % Am I using pdflatex,xelatex?


% --- fonts, encoding, language
\ifxetex
  \usepackage{fontspec}                  % font handling
  \usepackage{xltxtra}                   % xelatex goodies
  \usepackage{mathpazo}                  % math fonts 
  \usepackage{polyglossia}               % language support
\else
  \usepackage[utf8]{inputenc}            % support to file encoding (utf-8, iso8859-15=latin1, ...)
  %\usepackage[latin1]{inputenc}         
  \usepackage[T1]{fontenc}               % support to special characters (e.g.\`e...)
  \usepackage{ae,aecompl}                % standard fonts, for details see:
                                         %   http://dsanta.users.ch/resources/type1.html
  % language support                                       
  \if@enlang 
    \usepackage[italian,english]{babel}    % default language: english
  \else
    \usepackage[english,italian]{babel}   % default language: italian
  \fi
  %\usepackage[english,italian]{babel}   % default language: italian
  %\usepackage[italian,english]{babel}    % default language: english
  
\fi

% --- math support
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{textcomp}
\usepackage{pifont}           %    segni di spunta

% --- graphics 
\ifthenelse{\boolean{pdf}}{%
  %<if pdf>
  \usepackage{graphicx}           % \includegraphics & co.
  \usepackage{epstopdf}           % add support for eps images to pdflatex
  %\usepackage[pdf]{psfrag}       % NOT tested yet!
  %\usepackage[pdf]{pstricks}     % NOT tested yet!
                                  %http://tex.stackexchange.com/questions/8413/how-to-use-pstricks-in-pdflatex
}{%<if not pdf>
  \usepackage[dvips]{graphicx}    % \includegraphics & co
  \usepackage{psfrag}             % modification of string stored inside .eps file
}
\usepackage{eepic}      % exten. to picture environ. to be used with xfig generated files
\usepackage{overpic}    % exten. to picture environ. to be used with xfig generated files
\usepackage{subfigure}  % \subfigure command

\usepackage{array}      % array and tabular formatting
\usepackage{tabularx}   % tabular formatting
\usepackage{longtable}  % table spanning over multiple pages


% --- pdf support
\ifthenelse{\boolean{pdf}}{% pdflatex
  \usepackage[bookmarks,colorlinks=false]{hyperref}        % hyperlinks in pdf files
}{% latex
  \usepackage[dvips,bookmarks,colorlinks=false]{hyperref}  % hyperlinks in pdf files
} % if



% --- table support 
\usepackage{booktabs}    % table rows:
                         % \toprule, \midrule, \bottomrule
\usepackage{tabularx}    % add tabularx{X} environment
\usepackage{multirow}    % merge rows
\usepackage{array}
\usepackage{longtable}   % table on more pages



% ===================================================================
% --- rules for image manipulation --------------------------------------------

\ifthenelse{\boolean{pdf}}{% if pdflatex
% specify a list of directory to be searched for images
% the directories are searched for in the order below provided
\graphicspath{{images/}{images/pdf/}{images/png/}{images/jpg/}{images/eps/}%
{images/gif/}{images/tif/}{images/bmp/}{images/svg/}{:images:}}
% default extensions for image files, searched for in the order below provided
\DeclareGraphicsExtensions{.pdf,.png,.jpg,.eps,.gif,.tif,.bmp,.svg}
% conversion rules, the 'convert' program from the ImageMagick package is required
% gif, tiff, bmp, svg  images support via epstopdf and convert
\epstopdfDeclareGraphicsRule{.gif}{png}{.png}{convert #1 \OutputFile }
\epstopdfDeclareGraphicsRule{.tif}{png}{.png}{convert #1 \OutputFile }
\epstopdfDeclareGraphicsRule{.bmp}{png}{.png}{convert #1 \OutputFile }
\epstopdfDeclareGraphicsRule{.svg}{png}{.png}{convert #1 \OutputFile }
% --- epstopdf
\epstopdfsetup{outdir=images/epstopdf/}          % put all converted files in images/epstopdf/ directory
\epstopdfsetup{suffix=-epstopdf}                 % converted file: <original_name>-epstopdf.<ext>
\epstopdfsetup{verbose}                          % .log file will report verbose messages from epstopdf
}{% if latex
% specify a list of directory to be searched for images
% the directories are searched for in the order below provided
\graphicspath{{images/}{images/eps/}{images/png/}{images/jpg/}{images/pdf/}%
{images/gif/}{images/tif/}{images/bmp/}{images/svg/}{:images:}}
% default extensions for image files, searched for in the order below provided
\DeclareGraphicsExtensions{.eps,.pdf,.png,.jpg,.gif,.tif,.bmp,.svg} % latex
% conversion rules, the 'convert' program from the ImageMagick package is required
% file conversion anything to eps via 'convert' then include eps 
\DeclareGraphicsRule{.gif}{eps}{.gif.bb}{`convert #1 -monochrome 'eps:-'  }
\DeclareGraphicsRule{.jpg}{eps}{.jpg.bb}{`convert #1 'eps:-' }
\DeclareGraphicsRule{.png}{eps}{.png.bb}{`convert #1 'eps:-' }
\DeclareGraphicsRule{.tif}{eps}{.tif.bb}{`convert #1 'eps:-' }
\DeclareGraphicsRule{.bmp}{eps}{.bmp.bb}{`convert #1 'eps:-' }
\DeclareGraphicsRule{.pdf}{eps}{.pdf.bb}{`convert #1 'eps:-' }
\DeclareGraphicsRule{.svg}{eps}{.svg.bb}{`convert #1 'eps:-' }
} % if
%% note - syntax:
%% \DeclareGraphicsRule{ ext }{ type }{ read-file }{ command }





% ===================================================================
% cover and front matters
% ===================================================================

% --- title definiton macros
% default values (internal variables)
\makeatletter
\def\@Title{}
\def\@Subtitle{}
\def\@Author{}
\def\@Date{\today}
\makeatother

% users' commands
\makeatletter
\def\Title#1{\def\@Title{#1}}
\def\Subtitle#1{\def\@Subtitle{#1}}
\def\Author#1{\def\@Author{#1}}
\def\Date#1{\def\@Date{#1}}
\makeatother



% \printCover shows the cover
\makeatletter
\newcommand{\printCover}{ %
\begin{titlepage} %\title{
\begin{flushright}
{\Huge\bf\sf\@Title\\}
\rule[0mm]{\textwidth}{2mm}\\
{\bf\sf\large\@Subtitle}
\end{flushright}
\vfill%\vspace{7cm}
{\noindent\bf\sf\@Author}
\vfill%\mbox{} \vspace{9cm}\\
{\noindent\sf\@Date}%
\renewcommand{\thepage}{}%         % nessuna numerazione di pagina
\end{titlepage}
} %end \printCover
\makeatother


% ===================================================================
% styles
% ===================================================================


% --- style of section titles -------------------------------------------------

\usepackage{lastpage}        % provides a \pageref{LastPage} command 
\usepackage{fancyhdr}        % fancy headers



% --- sectioning --------------------------------------------------------------
% --- style of chapter title
\usepackage{blindtext, color}
\definecolor{gray75}{gray}{.75}
\definecolor{ared}{rgb}{.647,.129,.149}
\newcommand{\hsp}{\hspace{20pt}}

\usepackage[sf,bf]{titlesec}

% ---------------------
% patch of titlesec bug
% https://tex.stackexchange.com/questions/299969/titlesec-loss-of-section-numbering-with-the-new-update-2016-03-15
\makeatletter
\patchcmd{\ttlh@hang}{\parindent\z@}{\parindent\z@\leavevmode}{}{}
\patchcmd{\ttlh@hang}{\noindent}{}{}{}
\makeatother
% ---------------------

\setcounter{secnumdepth}{1} % determine section numbering (10 all sections are numbered)
\setcounter{tocdepth}{2} % determine the depth of sectioning displayed in the table of contents; 2 is the default 
% part and title in two lines
%\titleformat{\part}[block]{\sffamily\Large\raggedleft}{Parte~\Huge\thepart}{0pt}{\\\mbox{}\\\huge}[] 
%\titleformat{\chapter}[display]{\sffamily\Large\raggedleft}{Capitolo~\Huge\thechapter}{0pt}{\mbox{}\\\huge}[\mbox{}\\] 
% compact part & title
\titleformat{\part}[block]{\sffamily\Large\raggedleft}{\Huge\thepart\hsp\textcolor{gray75}{|}\hsp}{0pt}{\Huge}[] 
\titleformat{\chapter}[hang]{\Huge\bfseries\sf\raggedleft}{\thechapter\hsp\textcolor{gray75}{|}\hsp}{0pt}{\Huge\bfseries\sf}


% --- headers
%\usepackage{fancyhdr}        % fancy headers
\pagestyle{fancy} 
\renewcommand{\chaptermark}[1]{\markboth{#1}{}}
\renewcommand{\sectionmark}[1]{\markright{\thesection\ #1}}
\fancyhf{} %clears all header and footer fields
\fancyhead[LE,RO]{\bfseries\sf\thepage}
\fancyhead[LO]{\bfseries\sf\rightmark}
\fancyhead[RE]{\bfseries\sf\leftmark}
% redefine plain style for pagestyle
\fancypagestyle{plain}{%
  \fancyhead{} % get rid of headers
  \renewcommand{\headrulewidth}{0pt} % and the line
}
% redefine headings style for pagestyle
\fancypagestyle{headings}{%
 \fancyhead{} % get rid of headers
 \fancyhead[LE,RO]{\bfseries\sf\thepage}
 \fancyhead[LO]{\bfseries\sf\rightmark}
 \fancyhead[RE]{\bfseries\sf\leftmark}
}
% on float pages do not print the heading line
\renewcommand{\headrulewidth}{\iffloatpage{0pt}{0.4pt}}


% --- style of figure captions ------------------------------------------------
\usepackage[subfigure]{ccaption}
\captiondelim{ }
\captionnamefont{\bfseries \sffamily \small}
\captiontitlefont{\sffamily \small }




% ---  text styles ------------------------------------------------------------

% --- paragraphs
\newcommand{\tBeginPar}[1]{\textbf{#1}}

% --- font styles
\newcommand{\tDef}[1]{\textit{#1}}
\newcommand{\tDefObj}[1]{\textit{#1}}
\newcommand{\tDefTxt}[1]{\textit{#1}}
\newcommand{\tRemark}[1]{\emph{#1}}
\newcommand{\tREMARK}[1]{\textbf{\emph{#1}}}
\def\tLoud#1{\tREMARK{\uppercase{#1}}}
\newcommand{\tCode}[1]{\texttt{#1}}
\newcommand{\tForeign}[1]{\emph{#1}}
\newcommand{\tLatin}[1]{\emph{#1}}
\newcommand{\tExample}[1]{\textit{#1}}
\newcommand{\tStandard}[1]{\textsl{#1}}

% quoting text
\newcommand{\tQuote}[1]{\textsl{#1}}
\newcommand{\tQuoteFig}[1]{\textsl{#1}}
\newcommand{\tConcept}[1]{\textit{#1}}

% --- special text 

% quotation marks
\newcommand{\qmo}{``}  % usage: \qmo{}
\newcommand{\qmc}{''}  % usage: ...\qmc{}

% check mark 
%\newcommand{\Check}{$\surd$}           % segno di spunta


% --- environments --- --- ---
% quoteStandard, quoteRemark
  % see https://tex.stackexchange.com/questions/33219/whats-the-difference-between-the-environments-quote-and-quotation

%\newenvironment{quoteStandard}%
%{\noindent\begin{quote}\noindent\slshape}%
%{\end{quote}}
\newenvironment{quoteStandard}%
{\slshape\list{}{\rightmargin\leftmargin}%
\item\relax}
{\endlist}

\newenvironment{quoteRemark}%
{\bfseries\slshape\list{}{\rightmargin\leftmargin}%
\item\relax}
{\endlist}

% --------------------------------------------------------------------



% ===================================================================
% debug commands
% ===================================================================
\def\Vispa{La vispa Teresa avea tra l'erbetta a volo sorpresa gentil farfalletta, e tutta giuliva gridava distesa: \emph{l'ho presa! l'ho presa!}  - \emph{Deh! lasciami l'ale che male ti fo? non son forse anch'io figlia di Dio?} La vispa Teresa di colpo arrossì, dischiuse le dita e quella partì.}
\def\Vispas{\Vispa\ \Vispa\ \Vispa\ \Vispa\ \Vispa}

\def\debugPrintCharacters{%
\noindent ABCDEFGHIJKLMNOPQRSTUVWXYZ \\
\noindent abcdefghijklmnopqrstuvwxyz \\
\noindent 0123456789 \\
\noindent àèéìòù ÀÈÉÌÒÙ \\
\noindent , ; . : - ' ` '' `` \_ < > | § \\
\noindent !  £ \$ \% \& / ( ) \textbackslash = ? \# \@ \^ \\
\noindent fi ff \\
}

\makeatletter
\def\@dbgtb#1{\texttt{\textbackslash{}#1}}


% print a table with text styles in easyreport
\def\debugTextStyles{%
\begin{tabular}{ll}
\toprule
comando & impiego e effetto \\
\midrule
\@dbgtb{tDef} & \tDef{definizione} \\
\@dbgtb{tDefObj} & \tDefObj{termine definito}\\
\@dbgtb{fDefTxt} & \tDefTxt{testo della definizione} \\
\@dbgtb{tRemark} & \tRemark{testo evidenziato} \\
\@dbgtb{tREMARK} & \tREMARK{testo molto evidenziato} \\
\@dbgtb{tLoud} & \tLoud{testo urlato!} \\ 
\@dbgtb{tCode} & \tCode{codice (x=newObj();)} \\
\@dbgtb{tLatin} & \tLatin{testo in latino} \\
\@dbgtb{tForeign} & \tForeign{testo di un'altra lingua} \\
\@dbgtb{tExample} & \tExample{un esempio} \\
\@dbgtb{tStandard} & \tStandard{citazione di una norma} \\
\@dbgtb{tQuote} & \tQuote{citazione} \\
\@dbgtb{tQuoteFig} & \tQuoteFig{citazione di una figura} \\
\@dbgtb{tConcept} & \tConcept{un concetto (importante)} \\
\@dbgtb{tBeginPar} & \tBeginPar{testo di inizio paragrafo} \\%[12pt]
\bottomrule 
\end{tabular}
}

\def\debugEnvironments{%
\begin{tabular}{ll}
\toprule
environment & contesto di impiego \\
\midrule
quoteStandard & testo stralciato da una norma \\
quoteRemark & testo stralciato e evidenziato\\
\bottomrule
\end{tabular}
}

\makeatother

% ===================================================================



% --- macro --------------------------------------------------------------------
%\def\tDef#1{\textit{#1}}


% ===================================================================
% typo accelarators
% ===================================================================
\def\th{\textsl{th}}
\def\ie{\textsl{i.e.}}
\def\eg{\textsl{e.g.}}
\def\es{\textsl{ad es.}}

\def\v#1{\underline{#1}}
\def\octave{\tCode{octave}}
\def\matlab{\tCode{matlab}}
\def\labview{\tCode{labVIEW}}
\def\latex{LaTeX}
\def\easyrep{\tCode{easyrep}}
%\def\para#1{paragraph*{#1}\mbox{}\\}




% ===================================================================
% MEMO !
\ifthenelse{\boolean{pdf}}{%<if pdf>
% ok, nothing to do here
}{%<if not pdf>
% if you would make pdflatex mandatory, then stop compilation here
%\ClassError{\className}{pdfLaTeX NOT used}{ Sorry, this source MUST be compiled using pdfLaTeX }
}
